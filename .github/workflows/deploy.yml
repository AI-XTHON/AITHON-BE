name: Deploy Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
  REPO: backend
  IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend/${{ secrets.CLOUD_RUN_SERVICE }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Gradle Build (bootJar)
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon clean bootJar

      - name: Auth GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker to Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev -q

      - name: Build & Push Image
        run: |
          docker build -t $IMAGE:${{ github.sha }} .
          docker push $IMAGE:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE \
            --image $IMAGE:${{ github.sha }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --cpu 1 \
            --memory 512Mi \
            --max-instances 5 \
            --set-env-vars SPRING_PROFILES_ACTIVE=prod,DB_USERNAME=${{ secrets.DB_USERNAME }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_HOST=${{ secrets.DB_HOST }},DB_NAME=${{ secrets.DB_NAME }},DB_PORT=${{ secrets.DB_PORT }}

      - name: Output Service URL
        run: |
          URL=$(gcloud run services describe $SERVICE --region $REGION --format='value(status.url)')
          echo "SERVICE_URL=$URL" >> $GITHUB_ENV
          echo "Deployed URL: $URL"

      - name: Health Check
        run: |
          curl -fsS "$SERVICE_URL/actuator/health" || (echo "Health check failed" && exit 1)